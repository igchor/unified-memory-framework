name: GitHubActions

on: [push, pull_request]

jobs:
  ubuntu-build:
    name: Build - ubuntu
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        build_type: [Debug, Release]
        pool_tracking: ['-DUMF_ENABLE_POOL_TRACKING=ON', '-DUMF_ENABLE_POOL_TRACKING=OFF']

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install apt packages
        run: |
          sudo apt-get update
          sudo apt-get install -y clang git cmake python3-pip

      - name: Install pip packages
        run: |
          pip3 install clang-format==15.0.7

      - name: Prepare build and run CMake
        run: |
          mkdir build
          cd build
          cmake .. -DUMF_FORMAT_CODE_STYLE=ON -DCMAKE_BUILD_TYPE=${{matrix.build_type}} ${{matrix.pool_tracking}}

      - name: Run code-style check     
        working-directory: ${{github.workspace}}/build
        run: |
          make clang-format-check

      - name: Build UMF and run tests
        working-directory: ${{github.workspace}}/build
        run: |
          make -j$(nproc)
          ctest --output-on-failure

  windows-build:
    name: Build - Windows
    strategy:
      matrix:
        os: ['windows-2019']
        build_type: [Debug, Release]
        compiler: [{c: cl.exe, cxx: cl.exe}]
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install prerequisites
      run: python3 -m pip install clang-format==15.0.7

    - name: Configure CMake
      run: >
        cmake
        -B${{github.workspace}}/build
        -DCMAKE_C_COMPILER=${{matrix.compiler.c}}
        -DCMAKE_CXX_COMPILER=${{matrix.compiler.cxx}}
        -DCMAKE_POLICY_DEFAULT_CMP0094=NEW
        -DUMF_ENABLE_POOL_TRACKING=ON
        -DUMF_DEVELOPER_MODE=ON
        -DUMF_FORMAT_CODE_STYLE=ON

    - name: Build all
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}} -j 2

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{matrix.build_type}} --output-on-failure
